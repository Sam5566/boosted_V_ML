

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
New Run
Current date and time = 2023-02-23 00:46:16.309856
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.564, val acc= 32.18% |
Epoch 1: val_loss improved from inf to 1.5644, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/0
VALIDATION:   kappa = 1.05000     | val loss= 1.458, val acc= 37.75% |
Epoch 2: val_loss improved from 1.5644 to 1.4580, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/0
VALIDATION:   kappa = 1.05000     | val loss= 1.406, val acc= 40.23% |
Epoch 3: val_loss improved from 1.4580 to 1.4059, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/0
VALIDATION:   kappa = 1.05000     | val loss= 1.359, val acc= 41.37% |
Epoch 4: val_loss improved from 1.4059 to 1.3590, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/0
VALIDATION:   kappa = 1.05000     | val loss= 1.342, val acc= 42.33% |
Epoch 5: val_loss improved from 1.3590 to 1.3418, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/0
VALIDATION:   kappa = 1.05000     | val loss= 1.374, val acc= 41.94% |
Epoch   6: val_loss did not improve from 1.3418. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.348, val acc= 41.99% |
Epoch   7: val_loss did not improve from 1.3418. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.515, val acc= 41.09% |
Epoch   8: val_loss did not improve from 1.3418. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.552, val acc= 40.30% |
Epoch   9: val_loss did not improve from 1.3418. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 2.096, val acc= 38.24% |
Epoch  10: val_loss did not improve from 1.3418. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 2.594, val acc= 38.29% |
Epoch  11: val_loss did not improve from 1.3418. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.3418. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.3418. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.3418. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.3418. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.562, test acc= 42.55% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.550, val acc= 32.62% |
Epoch 1: val_loss improved from inf to 1.5495, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.475, val acc= 35.65% |
Epoch 2: val_loss improved from 1.5495 to 1.4752, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.349, val acc= 38.81% |
Epoch 3: val_loss improved from 1.4752 to 1.3492, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.391, val acc= 40.72% |
Epoch   4: val_loss did not improve from 1.3492. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.334, val acc= 42.02% |
Epoch 5: val_loss improved from 1.3492 to 1.3341, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.290, val acc= 41.81% |
Epoch 6: val_loss improved from 1.3341 to 1.2901, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.265, val acc= 41.81% |
Epoch 7: val_loss improved from 1.2901 to 1.2645, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.328, val acc= 39.57% |
Epoch   8: val_loss did not improve from 1.2645. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.468, val acc= 38.67% |
Epoch   9: val_loss did not improve from 1.2645. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.696, val acc= 39.44% |
Epoch  10: val_loss did not improve from 1.2645. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 2.054, val acc= 38.61% |
Epoch  11: val_loss did not improve from 1.2645. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2645. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2645. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2645. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.2645. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  16: val_loss did not improve from 1.2645. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  17: val_loss did not improve from 1.2645. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.538, test acc= 41.90% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.504, val acc= 32.19% |
Epoch 1: val_loss improved from inf to 1.5044, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/2
VALIDATION:   kappa = 1.05000     | val loss= 1.507, val acc= 36.63% |
Epoch   2: val_loss did not improve from 1.5044. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.344, val acc= 40.04% |
Epoch 3: val_loss improved from 1.5044 to 1.3439, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/2
VALIDATION:   kappa = 1.05000     | val loss= 1.369, val acc= 40.83% |
Epoch   4: val_loss did not improve from 1.3439. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.350, val acc= 41.20% |
Epoch   5: val_loss did not improve from 1.3439. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.346, val acc= 42.22% |
Epoch   6: val_loss did not improve from 1.3439. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.405, val acc= 40.96% |
Epoch   7: val_loss did not improve from 1.3439. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.400, val acc= 40.82% |
Epoch   8: val_loss did not improve from 1.3439. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.577, val acc= 40.16% |
Epoch   9: val_loss did not improve from 1.3439. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.841, val acc= 39.14% |
Epoch  10: val_loss did not improve from 1.3439. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.878, val acc= 37.88% |
Epoch  11: val_loss did not improve from 1.3439. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.3439. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.3439. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.193, test acc= 40.05% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.540, val acc= 32.66% |
Epoch 1: val_loss improved from inf to 1.5401, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.499, val acc= 35.62% |
Epoch 2: val_loss improved from 1.5401 to 1.4986, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.385, val acc= 39.94% |
Epoch 3: val_loss improved from 1.4986 to 1.3855, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.324, val acc= 41.23% |
Epoch 4: val_loss improved from 1.3855 to 1.3244, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.313, val acc= 41.96% |
Epoch 5: val_loss improved from 1.3244 to 1.3135, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.278, val acc= 42.29% |
Epoch 6: val_loss improved from 1.3135 to 1.2778, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.388, val acc= 41.83% |
Epoch   7: val_loss did not improve from 1.2778. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.427, val acc= 41.63% |
Epoch   8: val_loss did not improve from 1.2778. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.611, val acc= 40.24% |
Epoch   9: val_loss did not improve from 1.2778. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.759, val acc= 39.28% |
Epoch  10: val_loss did not improve from 1.2778. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 2.116, val acc= 38.73% |
Epoch  11: val_loss did not improve from 1.2778. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2778. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2778. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2778. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.2778. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  16: val_loss did not improve from 1.2778. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.295, test acc= 42.56% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.537, val acc= 33.31% |
Epoch 1: val_loss improved from inf to 1.5366, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/4
VALIDATION:   kappa = 1.05000     | val loss= 1.448, val acc= 38.08% |
Epoch 2: val_loss improved from 1.5366 to 1.4481, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/4
VALIDATION:   kappa = 1.05000     | val loss= 1.353, val acc= 40.84% |
Epoch 3: val_loss improved from 1.4481 to 1.3533, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/4
VALIDATION:   kappa = 1.05000     | val loss= 1.287, val acc= 41.67% |
Epoch 4: val_loss improved from 1.3533 to 1.2870, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/4
VALIDATION:   kappa = 1.05000     | val loss= 1.369, val acc= 42.37% |
Epoch   5: val_loss did not improve from 1.2870. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.306, val acc= 42.23% |
Epoch   6: val_loss did not improve from 1.2870. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.475, val acc= 40.93% |
Epoch   7: val_loss did not improve from 1.2870. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.517, val acc= 39.93% |
Epoch   8: val_loss did not improve from 1.2870. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.717, val acc= 40.07% |
Epoch   9: val_loss did not improve from 1.2870. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.925, val acc= 38.33% |
Epoch  10: val_loss did not improve from 1.2870. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  11: val_loss did not improve from 1.2870. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2870. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2870. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2870. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.510, test acc= 42.12% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.557, val acc= 32.70% |
Epoch 1: val_loss improved from inf to 1.5566, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/5
VALIDATION:   kappa = 1.05000     | val loss= 1.421, val acc= 38.61% |
Epoch 2: val_loss improved from 1.5566 to 1.4205, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/5
VALIDATION:   kappa = 1.05000     | val loss= 1.365, val acc= 41.13% |
Epoch 3: val_loss improved from 1.4205 to 1.3648, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/5
VALIDATION:   kappa = 1.05000     | val loss= 1.277, val acc= 42.04% |
Epoch 4: val_loss improved from 1.3648 to 1.2768, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/5
VALIDATION:   kappa = 1.05000     | val loss= 1.312, val acc= 42.54% |
Epoch   5: val_loss did not improve from 1.2768. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.339, val acc= 42.43% |
Epoch   6: val_loss did not improve from 1.2768. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.345, val acc= 42.11% |
Epoch   7: val_loss did not improve from 1.2768. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.574, val acc= 41.42% |
Epoch   8: val_loss did not improve from 1.2768. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.482, val acc= 40.55% |
Epoch   9: val_loss did not improve from 1.2768. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.714, val acc= 39.52% |
Epoch  10: val_loss did not improve from 1.2768. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 2.243, val acc= 37.57% |
Epoch  11: val_loss did not improve from 1.2768. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2768. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2768. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2768. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.417, test acc= 42.03% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.519, val acc= 31.67% |
Epoch 1: val_loss improved from inf to 1.5194, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.506, val acc= 36.30% |
Epoch 2: val_loss improved from 1.5194 to 1.5059, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.381, val acc= 38.89% |
Epoch 3: val_loss improved from 1.5059 to 1.3815, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.284, val acc= 40.64% |
Epoch 4: val_loss improved from 1.3815 to 1.2841, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.282, val acc= 41.42% |
Epoch 5: val_loss improved from 1.2841 to 1.2819, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.314, val acc= 41.26% |
Epoch   6: val_loss did not improve from 1.2819. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.387, val acc= 41.20% |
Epoch   7: val_loss did not improve from 1.2819. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.364, val acc= 39.98% |
Epoch   8: val_loss did not improve from 1.2819. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.844, val acc= 38.84% |
Epoch   9: val_loss did not improve from 1.2819. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.989, val acc= 38.14% |
Epoch  10: val_loss did not improve from 1.2819. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  11: val_loss did not improve from 1.2819. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2819. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2819. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2819. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.2819. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.148, test acc= 42.12% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.523, val acc= 31.65% |
Epoch 1: val_loss improved from inf to 1.5231, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.479, val acc= 34.21% |
Epoch 2: val_loss improved from 1.5231 to 1.4787, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.422, val acc= 38.49% |
Epoch 3: val_loss improved from 1.4787 to 1.4223, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.329, val acc= 40.87% |
Epoch 4: val_loss improved from 1.4223 to 1.3286, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.291, val acc= 41.79% |
Epoch 5: val_loss improved from 1.3286 to 1.2909, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.347, val acc= 41.88% |
Epoch   6: val_loss did not improve from 1.2909. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.285, val acc= 41.12% |
Epoch 7: val_loss improved from 1.2909 to 1.2853, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.402, val acc= 40.38% |
Epoch   8: val_loss did not improve from 1.2853. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.575, val acc= 39.99% |
Epoch   9: val_loss did not improve from 1.2853. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.793, val acc= 38.45% |
Epoch  10: val_loss did not improve from 1.2853. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  11: val_loss did not improve from 1.2853. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2853. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2853. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2853. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.2853. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  16: val_loss did not improve from 1.2853. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  17: val_loss did not improve from 1.2853. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.107, test acc= 41.01% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.516, val acc= 32.90% |
Epoch 1: val_loss improved from inf to 1.5158, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.408, val acc= 38.65% |
Epoch 2: val_loss improved from 1.5158 to 1.4081, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.358, val acc= 40.70% |
Epoch 3: val_loss improved from 1.4081 to 1.3584, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.318, val acc= 41.83% |
Epoch 4: val_loss improved from 1.3584 to 1.3175, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.317, val acc= 42.78% |
Epoch 5: val_loss improved from 1.3175 to 1.3166, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.307, val acc= 42.64% |
Epoch 6: val_loss improved from 1.3166 to 1.3073, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.331, val acc= 42.35% |
Epoch   7: val_loss did not improve from 1.3073. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.324, val acc= 41.48% |
Epoch   8: val_loss did not improve from 1.3073. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.643, val acc= 40.18% |
Epoch   9: val_loss did not improve from 1.3073. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.640, val acc= 39.30% |
Epoch  10: val_loss did not improve from 1.3073. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 2.029, val acc= 38.40% |
Epoch  11: val_loss did not improve from 1.3073. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.3073. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.3073. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.3073. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.3073. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  16: val_loss did not improve from 1.3073. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.352, test acc= 43.07% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=6, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.478, val acc= 33.33% |
Epoch 1: val_loss improved from inf to 1.4780, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= 1.492, val acc= 37.54% |
Epoch   2: val_loss did not improve from 1.4780. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.314, val acc= 39.98% |
Epoch 3: val_loss improved from 1.4780 to 1.3139, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= 1.326, val acc= 41.47% |
Epoch   4: val_loss did not improve from 1.3139. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.354, val acc= 41.36% |
Epoch   5: val_loss did not improve from 1.3139. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.260, val acc= 41.79% |
Epoch 6: val_loss improved from 1.3139 to 1.2600, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= 1.202, val acc= 42.02% |
Epoch 7: val_loss improved from 1.2600 to 1.2020, saving model to/home/samhuang/ML/best_model/best_model_senary_P_CNN2_kappa0.2301_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= 1.309, val acc= 41.18% |
Epoch   8: val_loss did not improve from 1.2020. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.282, val acc= 40.36% |
Epoch   9: val_loss did not improve from 1.2020. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.345, val acc= 39.36% |
Epoch  10: val_loss did not improve from 1.2020. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= 1.855, val acc= 38.77% |
Epoch  11: val_loss did not improve from 1.2020. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  12: val_loss did not improve from 1.2020. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  13: val_loss did not improve from 1.2020. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  14: val_loss did not improve from 1.2020. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  15: val_loss did not improve from 1.2020. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  16: val_loss did not improve from 1.2020. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 16.74% |
Epoch  17: val_loss did not improve from 1.2020. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 0.287, test acc= 41.82% |
Finished Training
[1.5784084  1.53619686 1.48974829 1.41655675 1.42180303 1.31517062
 1.23372771 1.11445885 0.99750723 0.8588869         nan        nan
        nan        nan        nan        nan        nan] <class 'numpy.ndarray'>
N of classes 6
$W^+/W^+$ (auc = 84.46 +- 0.3875 %)
$W^-/W^-$ (auc = 83.45 +- 0.4594 %)
$Z/Z$ (auc = 80.06 +- 0.9335 %)
$W^+/W^-$ (auc = 71.52 +- 0.6536 %)
$W^+/Z$ (auc = 69.76 +- 0.5055 %)
$W^-/Z$ (auc = 69.59 +- 0.5933 %)
N of classes 6
$W^+/W^+$ (acc = 48.53 +- 3.2441 %)
$W^-/W^-$ (acc = 50.46 +- 2.1152 %)
$Z/Z$ (acc = 43.11 +- 1.5405 %)
$W^+/W^-$ (acc = 38.13 +- 1.0059 %)
$W^+/Z$ (acc = 31.80 +- 2.0196 %)
$W^-/Z$ (acc = 32.54 +- 1.4173 %)
The summarized testing accuracy = 41.93 +- 0.8092 %, with the loss = 0.3407 +- 0.155121
Best performance is derived from Model #8, whose loss = 0.3519 and acc = 43.07 %
