

$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
New Run
Current date and time = 2023-02-24 00:59:47.499358
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.719, val acc= 26.46% |
Epoch 1: val_loss improved from inf to 1.7190, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/0
VALIDATION:   kappa = 1.05000     | val loss= 1.734, val acc= 28.67% |
Epoch   2: val_loss did not improve from 1.7190. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   3: val_loss did not improve from 1.7190. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.7190. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.7190. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.7190. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.7190. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.7190. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.7190. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.7190. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.7190. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 2.091, test acc= 27.87% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.845, val acc= 28.17% |
Epoch 1: val_loss improved from inf to 1.8449, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= 1.600, val acc= 31.41% |
Epoch 2: val_loss improved from 1.8449 to 1.5998, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/1
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   3: val_loss did not improve from 1.5998. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.5998. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.5998. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.5998. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.5998. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.5998. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.5998. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.5998. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.5998. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.5998. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 2.126, test acc= 31.42% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.621, val acc= 27.35% |
Epoch 1: val_loss improved from inf to 1.6206, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/2
VALIDATION:   kappa = 1.05000     | val loss= 1.598, val acc= 27.82% |
Epoch 2: val_loss improved from 1.6206 to 1.5983, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/2
VALIDATION:   kappa = 1.05000     | val loss= 1.604, val acc= 28.57% |
Epoch   3: val_loss did not improve from 1.5983. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.5983. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.5983. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.5983. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.5983. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.5983. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.5983. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.5983. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.5983. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.5983. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 1.724, test acc= 27.89% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.906, val acc= 23.78% |
Epoch 1: val_loss improved from inf to 1.9062, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= 1.673, val acc= 28.72% |
Epoch 2: val_loss improved from 1.9062 to 1.6732, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/3
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   3: val_loss did not improve from 1.6732. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.6732. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.6732. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.6732. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.6732. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.6732. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.6732. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.6732. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.6732. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.6732. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 1.666, test acc= 29.28% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.608, val acc= 27.69% |
Epoch 1: val_loss improved from inf to 1.6077, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/4
VALIDATION:   kappa = 1.05000     | val loss= 1.581, val acc= 29.79% |
Epoch 2: val_loss improved from 1.6077 to 1.5812, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/4
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   3: val_loss did not improve from 1.5812. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.5812. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.5812. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.5812. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.5812. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.5812. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.5812. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.5812. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.5812. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.5812. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 2.087, test acc= 29.88% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.646, val acc= 28.78% |
Epoch 1: val_loss improved from inf to 1.6460, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/5
VALIDATION:   kappa = 1.05000     | val loss= 1.756, val acc= 29.45% |
Epoch   2: val_loss did not improve from 1.6460. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   3: val_loss did not improve from 1.6460. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.6460. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.6460. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.6460. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.6460. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.6460. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.6460. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.6460. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.6460. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 2.068, test acc= 27.80% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.640, val acc= 27.14% |
Epoch 1: val_loss improved from inf to 1.6403, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.597, val acc= 29.44% |
Epoch 2: val_loss improved from 1.6403 to 1.5973, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= 1.439, val acc= 36.14% |
Epoch 3: val_loss improved from 1.5973 to 1.4393, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/6
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.4393. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.4393. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.4393. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.4393. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.4393. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.4393. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.4393. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.4393. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.4393. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  13: val_loss did not improve from 1.4393. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 2.900, test acc= 35.89% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.766, val acc= 27.62% |
Epoch 1: val_loss improved from inf to 1.7659, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.703, val acc= 28.66% |
Epoch 2: val_loss improved from 1.7659 to 1.7032, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= 1.631, val acc= 28.75% |
Epoch 3: val_loss improved from 1.7032 to 1.6314, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/7
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.6314. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.6314. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.6314. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.6314. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.6314. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.6314. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.6314. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.6314. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.6314. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  13: val_loss did not improve from 1.6314. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 1.891, test acc= 28.55% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.672, val acc= 27.91% |
Epoch 1: val_loss improved from inf to 1.6721, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.646, val acc= 32.07% |
Epoch 2: val_loss improved from 1.6721 to 1.6463, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= 1.569, val acc= 34.57% |
Epoch 3: val_loss improved from 1.6463 to 1.5692, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/8
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.5692. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.5692. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.5692. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.5692. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.5692. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.5692. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.5692. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.5692. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.5692. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  13: val_loss did not improve from 1.5692. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 1.923, test acc= 34.35% |
CNN2_torch(
  (h2ptjl): Sequential(
    (0): BatchNorm2d(2, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (1): Conv2d(2, 32, kernel_size=(6, 6), stride=(1, 1), padding=same)
    (2): ReLU()
    (3): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (4): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(32, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(32, 128, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(128, 128, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Sequential(
      (0): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(128, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), padding=same)
        )
      )
      (1): ResidualBlock(
        (left): Sequential(
          (0): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
          (1): ReLU(inplace=True)
          (2): Conv2d(256, 256, kernel_size=(6, 6), stride=(1, 1), padding=same)
        )
        (shortcut): Sequential()
      )
    )
    (7): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
    (8): Dropout(p=0.1, inplace=False)
  )
  (linear1): Linear(in_features=20736, out_features=512, bias=True)
  (linear2): Linear(in_features=512, out_features=32, bias=True)
  (linear3): Linear(in_features=512, out_features=128, bias=True)
  (linear4): Linear(in_features=128, out_features=32, bias=True)
  (_output): Linear(in_features=32, out_features=7, bias=True)
)
Send the model to cuda
VALIDATION:   kappa = 1.05000     | val loss= 1.694, val acc= 27.49% |
Epoch 1: val_loss improved from inf to 1.6941, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= 1.601, val acc= 29.54% |
Epoch 2: val_loss improved from 1.6941 to 1.6011, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= 1.357, val acc= 37.47% |
Epoch 3: val_loss improved from 1.6011 to 1.3568, saving model to/home/samhuang/ML/best_model/best_model_septenary_P_CNN2_kappa0.2302_fiximag/Try/9
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   4: val_loss did not improve from 1.3568. Performance did not improve for  1 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   5: val_loss did not improve from 1.3568. Performance did not improve for  2 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   6: val_loss did not improve from 1.3568. Performance did not improve for  3 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   7: val_loss did not improve from 1.3568. Performance did not improve for  4 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   8: val_loss did not improve from 1.3568. Performance did not improve for  5 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch   9: val_loss did not improve from 1.3568. Performance did not improve for  6 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  10: val_loss did not improve from 1.3568. Performance did not improve for  7 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  11: val_loss did not improve from 1.3568. Performance did not improve for  8 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  12: val_loss did not improve from 1.3568. Performance did not improve for  9 epoch(s)
VALIDATION:   kappa = 1.05000     | val loss= nan, val acc= 14.49% |
Epoch  13: val_loss did not improve from 1.3568. Performance did not improve for 10 epoch(s)
dict_keys(['loss', 'accuracy', 'val_loss', 'val_accuracy'])
TEST:   kappa = 1.05000     | test loss= 2.255, test acc= 37.43% |
Finished Training
N of classes 7
$W^+/W^+$ (auc = 66.15 +- 9.3102 %)
$W^-/W^-$ (auc = 65.78 +- 8.0364 %)
$Z/Z$ (auc = 61.56 +- 1.7110 %)
$W^+/W^-$ (auc = 59.44 +- 1.3799 %)
$W^+/Z$ (auc = 61.51 +- 3.8400 %)
$W^-/Z$ (auc = 61.61 +- 4.3919 %)
background (auc = 99.54 +- 0.4312 %)
N of classes 7
$W^+/W^+$ (acc = 24.87 +- 10.5090 %)
$W^-/W^-$ (acc = 21.80 +- 5.0578 %)
$Z/Z$ (acc = 19.68 +- 1.8415 %)
$W^+/W^-$ (acc = 17.90 +- 1.9032 %)
$W^+/Z$ (acc = 19.27 +- 2.6255 %)
$W^-/Z$ (acc = 18.54 +- 2.5212 %)
background (acc = 94.50 +- 2.9631 %)
The summarized testing accuracy = 31.04 +- 3.4133 %, with the loss = 2.0731 +- 0.325926
Best performance is derived from Model #9, whose loss = 2.2553 and acc = 37.43 %
